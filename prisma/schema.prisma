// Define the database provider
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql" // Using NeonDB
  url      = env("DATABASE_URL")
}

// 游릭 Role Enum (NEW)
enum Role {
  USER // Can only participate in Hackathons
  ADMIN // Can create & manage Hackathons
}

// 游릭 User Model (Updated)
model User {
  id           String        @id @default(cuid()) // Unique user ID
  githubId     String        @unique // GitHub ID for authentication
  name         String?
  email        String?       @unique
  image        String?
  role         Role          @default(USER) // Default is USER
  submissions  Submission[]
  certificates Certificate[]
  createdAt    DateTime      @default(now())
}

// 游릭 Hackathon Model
model Hackathon {
  id          String        @id @default(cuid())
  title       String
  description String
  startDate   DateTime
  endDate     DateTime
  createdBy   String
  createdAt   DateTime      @default(now())
  questions   Question[]
  submissions Submission[]
  Certificate Certificate[]
}

// 游릭 Question Model
model Question {
  id          String   @id @default(cuid())
  hackathonId String
  title       String
  description String
  createdAt   DateTime @default(now())

  hackathon   Hackathon    @relation(fields: [hackathonId], references: [id])
  submissions Submission[]
}

// 游릭 Submission Model
model Submission {
  id          String   @id @default(cuid())
  userId      String
  hackathonId String
  questionId  String
  code        String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  user      User      @relation(fields: [userId], references: [id])
  hackathon Hackathon @relation(fields: [hackathonId], references: [id])
  question  Question  @relation(fields: [questionId], references: [id])
}

// 游릭 Certificate Model
model Certificate {
  id          String   @id @default(cuid())
  userId      String
  hackathonId String
  certUrl     String // Certificate file URL
  createdAt   DateTime @default(now())

  user      User      @relation(fields: [userId], references: [id])
  hackathon Hackathon @relation(fields: [hackathonId], references: [id])
}
